Experiment 1
Aim of the experiment:-Write a program of linear search.
Step to Step Procedure:-
Step 1:-Read the search element from the user.
Step 2:-Compare thesearch element with the first element in the list.
Step 3:-If both are matched,then display "Given element is found" and terminate the function.
Step 4:-If both are not matched,then compare search element with the next element in the list.
Step 5:-Repeat steps 3and 4 until search element is compared with last element in the list.
Step 6:- If last element in the listalso doesnot match,then display"Element is not found" and terminate the function.
Program:-
#include<stdio.h>
#include<conio.h>
void main()
{
int i,a[100],n,key,flag=0,j;
printf("enter the size of an array\n");
scanf("%d",&n);
printf("enter the key element");
scanf("%d",&key);
for(j=0;j<n;j++)
{
        if(a[j] == key)
        {
               flag=1;
               break;
        }
}
if(flag == 1)
        printf("The key elements is found at location %d",j);
else
        printf("The key element is not found in the array");
}        
        
         
           
         
         
         
         
         
         
         



Experiment 2
Aim of the experiment:-Write the program of linear search using recursion.
Step to Step Procedure:-
Step 1 :- we search an element or value in a given array by traversing the array from the starting, till the desired element or value is found.
Step 2:- The array is searched sequentially and the position is returned if the key element to be searched is available in the array, otherwise “Element not found” is printed.
Step 3:- Here in this C Program we have created a recursive function called RecursiveLS(), which takes in 4 input parameters and returns the position of element in a array which is
searched by the user.
Step 4:- If the element that is searched is the first we directly return the index.
Step 5:- But if it is not the first element of array, we decrease the size of array by 1, by eliminating the first element of the array, which means when the RecursiveLS() is called 
second time the array size will be (n-1).This will go on until the element is found.
Program:-
#include <stdio.h>
int RecursiveLS(int arr[], int value, int index, int n)
{
    int pos = 0;
 
    if(index >= n)
    {
        return 0;
    }
 
    else if (arr[index] == value)
    {
        pos = index + 1;
        return pos;
    }
 
    else
    {
        return RecursiveLS(arr, value, index+1, n);
    }
    return pos;
}
 
int main()
{
    int n, value, pos, m = 0, arr[100];
    printf("Enter the total elements in the array  ");
    scanf("%d", &n);
 
    printf("Enter the array elements\n");
    for (int i = 0; i < n; i++)
    {
        scanf("%d", &arr[i]);
    }
 
    printf("Enter the element to search  ");
    scanf("%d", &value);
 
    pos =  RecursiveLS(arr, value, 0, n);
    if (pos != 0)
    {
        printf("Element found at pos %d ", pos);
    }
    else
    {
        printf("Element not found");
    }
    return 0;
}
